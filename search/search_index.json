{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PSFMachine","title":"Home"},{"location":"#psfmachine","text":"","title":"PSFMachine"},{"location":"machine/","text":"Documentation for Machine Class for calculating fast PRF photometry on a collection of images and a list of in image sources. This method is discussed in detail in CITATION This method solves a linear model to assuming Gaussian priors on the weight of each linear components as explained by Luger, Foreman-Mackey & Hogg, 2017 (https://ui.adsabs.harvard.edu/abs/2017RNAAS...1....7L/abstract) __init__ ( self , time , flux , flux_err , ra , dec , sources , column , row , limit_radius = 24.0 , time_mask = None , n_r_knots = 10 , n_phi_knots = 15 , n_time_knots = 10 , n_time_points = 200 , time_radius = 8 , rmin = 1 , rmax = 16 ) special Class for calculating fast PRF photometry on a collection of images and a list of in image sources. This method is discussed in detail in CITATION This method solves a linear model to assuming Gaussian priors on the weight of each linear components as explained by Luger, Foreman-Mackey & Hogg, 2017 (https://ui.adsabs.harvard.edu/abs/2017RNAAS...1....7L/abstract) Parameters: Name Type Description Default time numpy.ndarray Time values in JD required flux numpy.ndarray Flux values at each pixels and times in units of electrons / sec required flux_err numpy.ndarray Flux error values at each pixels and times in units of electrons / sec required ra numpy.ndarray Right Ascension coordinate of each pixel required dec numpy.ndarray Declination coordinate of each pixel required sources pandas.DataFrame DataFrame with source present in the images required column np.ndarray Data array containing the \"columns\" of the detector that each pixel is on. required row np.ndarray Data array containing the \"columns\" of the detector that each pixel is on. required limit_radius numpy.ndarray Radius limit in arcsecs to select stars to be used for PRF modeling 24.0 time_mask np.ndarray of booleans A boolean array of shape time. Only values where this mask is True will be used to calculate the average image for fitting the PSF. Use this to e.g. select frames with low VA, or no focus change None n_r_knots int Number of radial knots in the spline model. 10 n_phi_knots int Number of azimuthal knots in the spline model. 15 n_time_points int Number of time points to bin by when fitting for velocity aberration. 200 time_radius float The radius around sources, out to which the velocity aberration model will be fit. (arcseconds) 8 rmin float The minimum radius for the PRF model to be fit. (arcseconds) 1 rmax float The maximum radius for the PRF model to be fit. (arcseconds) 16 Attributes: Name Type Description nsources int Number of sources to be extracted nt int Number of onservations in the time series (aka number of cadences) npixels int Total number of pixels with flux measurements source_flux_estimates numpy.ndarray First estimation of pixel fluxes assuming values given by the sources catalog (e.g. Gaia phot_g_mean_flux) dra numpy.ndarray Distance in right ascension between pixel and source coordinates, units of degrees ddec numpy.ndarray Distance in declination between pixel and source coordinates, units of degrees r numpy.ndarray Radial distance between pixel and source coordinates (polar coordinates), in units of arcseconds phi numpy.ndarray Angle between pixel and source coordinates (polar coordinates), in units of radians source_mask scipy.sparce.csr_matrix Sparce mask matrix with pixels that contains flux from sources uncontaminated_source_mask scipy.sparce.csr_matrix Sparce mask matrix with selected uncontaminated pixels per source to be used to build the PSF model mean_model scipy.sparce.csr_matrix Mean PSF model values per pixel used for PSF photometry build_shape_model ( self , plot = False , flux_cut_off = 1 ) Builds a sparse model matrix of shape nsources x npixels to be used when fitting each source pixels to estimate its PSF photometry Parameters: Name Type Description Default flux_cut_off float the flux in COUNTS at which to stop evaluating the model! 1 fit_model ( self , fit_va = False ) Finds the best fitting weights for every source, simultaneously plot_shape_model ( self , radius = 20 ) Diagnostic plot of shape model...","title":"Machine"},{"location":"machine/#documentation-for-machine","text":"Class for calculating fast PRF photometry on a collection of images and a list of in image sources. This method is discussed in detail in CITATION This method solves a linear model to assuming Gaussian priors on the weight of each linear components as explained by Luger, Foreman-Mackey & Hogg, 2017 (https://ui.adsabs.harvard.edu/abs/2017RNAAS...1....7L/abstract)","title":"Documentation for Machine"},{"location":"machine/#psfmachine.machine.Machine.__init__","text":"Class for calculating fast PRF photometry on a collection of images and a list of in image sources. This method is discussed in detail in CITATION This method solves a linear model to assuming Gaussian priors on the weight of each linear components as explained by Luger, Foreman-Mackey & Hogg, 2017 (https://ui.adsabs.harvard.edu/abs/2017RNAAS...1....7L/abstract) Parameters: Name Type Description Default time numpy.ndarray Time values in JD required flux numpy.ndarray Flux values at each pixels and times in units of electrons / sec required flux_err numpy.ndarray Flux error values at each pixels and times in units of electrons / sec required ra numpy.ndarray Right Ascension coordinate of each pixel required dec numpy.ndarray Declination coordinate of each pixel required sources pandas.DataFrame DataFrame with source present in the images required column np.ndarray Data array containing the \"columns\" of the detector that each pixel is on. required row np.ndarray Data array containing the \"columns\" of the detector that each pixel is on. required limit_radius numpy.ndarray Radius limit in arcsecs to select stars to be used for PRF modeling 24.0 time_mask np.ndarray of booleans A boolean array of shape time. Only values where this mask is True will be used to calculate the average image for fitting the PSF. Use this to e.g. select frames with low VA, or no focus change None n_r_knots int Number of radial knots in the spline model. 10 n_phi_knots int Number of azimuthal knots in the spline model. 15 n_time_points int Number of time points to bin by when fitting for velocity aberration. 200 time_radius float The radius around sources, out to which the velocity aberration model will be fit. (arcseconds) 8 rmin float The minimum radius for the PRF model to be fit. (arcseconds) 1 rmax float The maximum radius for the PRF model to be fit. (arcseconds) 16 Attributes: Name Type Description nsources int Number of sources to be extracted nt int Number of onservations in the time series (aka number of cadences) npixels int Total number of pixels with flux measurements source_flux_estimates numpy.ndarray First estimation of pixel fluxes assuming values given by the sources catalog (e.g. Gaia phot_g_mean_flux) dra numpy.ndarray Distance in right ascension between pixel and source coordinates, units of degrees ddec numpy.ndarray Distance in declination between pixel and source coordinates, units of degrees r numpy.ndarray Radial distance between pixel and source coordinates (polar coordinates), in units of arcseconds phi numpy.ndarray Angle between pixel and source coordinates (polar coordinates), in units of radians source_mask scipy.sparce.csr_matrix Sparce mask matrix with pixels that contains flux from sources uncontaminated_source_mask scipy.sparce.csr_matrix Sparce mask matrix with selected uncontaminated pixels per source to be used to build the PSF model mean_model scipy.sparce.csr_matrix Mean PSF model values per pixel used for PSF photometry","title":"__init__()"},{"location":"machine/#psfmachine.machine.Machine.build_shape_model","text":"Builds a sparse model matrix of shape nsources x npixels to be used when fitting each source pixels to estimate its PSF photometry Parameters: Name Type Description Default flux_cut_off float the flux in COUNTS at which to stop evaluating the model! 1","title":"build_shape_model()"},{"location":"machine/#psfmachine.machine.Machine.fit_model","text":"Finds the best fitting weights for every source, simultaneously","title":"fit_model()"},{"location":"machine/#psfmachine.machine.Machine.plot_shape_model","text":"Diagnostic plot of shape model...","title":"plot_shape_model()"},{"location":"tpf/","text":"Documentation for TPFMachine Subclass of Machine that specifically works with TPFs","title":"TPFMachine"},{"location":"tpf/#documentation-for-tpfmachine","text":"Subclass of Machine that specifically works with TPFs","title":"Documentation for TPFMachine"}]}